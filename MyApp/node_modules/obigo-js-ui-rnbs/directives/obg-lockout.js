 /**
  *
  *  @module directives/obg-lockout
  *
  *  @example
  *  <obg-button v-lock-out.disable />
  *  <img v-lock-out.invisible />
 */
import Lockout, {lockoutInstance} from '../features/lockout'

export default {
  inserted (el, binding, vnode) {
    lockoutInstance._addElement(el, binding, vnode)
  },
  componentUpdated (el, binding, vnode) {
    const { modifiers } = binding
    let enableFlag = lockoutInstance.getDrivingFlag()
    if (!enableFlag || !modifiers) {
      return
    }
    if (!modifiers.disable && !modifiers.invisible) {
      return
    }
    let arr = lockoutInstance.getPathCollection()
    let foundItem = arr.find(function ({element}) {
      return el.isEqualNode(element)
    })
    if (foundItem) {
      Lockout.applyLockoutMode(foundItem, enableFlag)
    }
  },
  unbind (el, binding) {
    lockoutInstance._removeElement(el, binding)
  }
}
